create or replace STORAGE INTEGRATION ST_AZURE_INTEGRATION
TYPE=EXTERNAL_STAGE
STORAGE_PROVIDER=AZURE
ENABLED=TRUE
AZURE_TENANT_ID='<TENANT_ID>'
STORAGE_ALLOWED_LOCATIONS=('URL');


desc STORAGE INTEGRATION ST_AZURE_INTEGRATION;

create or replace stage STREAMING_STAGE
STORAGE_INTEGRATION=ST_AZURE_INTEGRATION
url='<blob location>';

list @STREAMING_STAGE;

CREATE OR REPLACE FILE FORMAT STREAMING_FILE_FORMAT 
TYPE=CSV
SKIP_HEADER=1
FIELD_DELIMITER=','
FIELD_OPTIONALLY_ENCLOSED_BY='"';

CREATE OR REPLACE NOTIFICATION INTEGRATION NT_AZURE_NOTIFICATION_INTEGRATION
ENABLED=TRUE
TYPE=QUEUE
NOTIFICATION_PROVIDER=AZURE_STORAGE_QUEUE
azure_storage_queue_primary_uri='<queue url>'
AZURE_TENANT_ID='<Tenant ID>';

desc NOTIFICATION INTEGRATION NT_AZURE_NOTIFICATION_INTEGRATION;

CREATE OR REPLACE PIPE STREAMING_PIPE
AUTO_INGEST=TRUE
INTEGRATION=NT_AZURE_NOTIFICATION_INTEGRATION
AS
COPY INTO CUSTOMER_RAW FROM @STREAMING_STAGE
FILE_FORMAT=STREAMING_FILE_FORMAT;

show PIPES;
select * from CUSTOMER_RAW;
ALTER PIPE STREAMING_PIPE REFRESH;

select * from TABLE(INFORMATION_SCHEMA.COPY_HISTORY(TABLE_NAME=>'CUSTOMER_RAW',START_TIME=>DATEADD(hours,-1,CURRENT_TIMESTAMP())));
